///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class IconModelGlyphs {
  /// iconId
  String iconId;

  /// name
  String name;

  /// fontClass
  String fontClass;

  /// unicode
  String unicode;

  /// unicodeDecimal
  int unicodeDecimal;

  /// 1
  IconModelGlyphs({
    this.iconId,
    this.name,
    this.fontClass,
    this.unicode,
    this.unicodeDecimal,
  });

  /// 1
  IconModelGlyphs.fromJson(Map<String, dynamic> json) {
    iconId = json["icon_id"]?.toString();
    name = json["name"]?.toString();
    fontClass = json["font_class"]?.toString();
    unicode = json["unicode"]?.toString();
    unicodeDecimal = json["unicode_decimal"]?.toInt();
  }

  /// 1
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["icon_id"] = iconId;
    data["name"] = name;
    data["font_class"] = fontClass;
    data["unicode"] = unicode;
    data["unicode_decimal"] = unicodeDecimal;
    return data;
  }
}

/// 1
class IconModel {
  /// id
  String id;

  /// name
  String name;

  /// fontFamily
  String fontFamily;

  /// cssPrefixText
  String cssPrefixText;

  /// description
  String description;

  /// glyphs
  List<IconModelGlyphs> glyphs;

  /// 1
  IconModel({
    this.id,
    this.name,
    this.fontFamily,
    this.cssPrefixText,
    this.description,
    this.glyphs,
  });

  /// 1
  IconModel.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toString();
    name = json["name"]?.toString();
    fontFamily = json["font_family"]?.toString();
    cssPrefixText = json["css_prefix_text"]?.toString();
    description = json["description"]?.toString();
    if (json["glyphs"] != null) {
      var v = json["glyphs"];
      var arr0 = List<IconModelGlyphs>();
      v.forEach((v) {
        arr0.add(IconModelGlyphs.fromJson(v));
      });
      glyphs = arr0;
    }
  }

  /// 1
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["name"] = name;
    data["font_family"] = fontFamily;
    data["css_prefix_text"] = cssPrefixText;
    data["description"] = description;
    if (glyphs != null) {
      var v = glyphs;
      var arr0 = List();
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data["glyphs"] = arr0;
    }
    return data;
  }
}
